{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNSXpuNAwsojaDtGF52WLDH",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jp1606reis/Projeto-bd-colab/blob/main/Notebook%20Colab\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aQjzxIUCbl6i"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "source": [
        "import sqlite3\n",
        "\n",
        "# 1. Conexão e criação do BD (em memória ou arquivo .db)\n",
        "conn = sqlite3.connect(':memory:')  # Use ':memory:' para banco temporário ou 'meubanco.db' para persistente\n",
        "cursor = conn.cursor()\n",
        "\n",
        "# 2. Criação de tabelas: Pessoas, Produtos, Vendas\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE Pessoas (\n",
        "    id INTEGER PRIMARY KEY AUTOINCREMENT,\n",
        "    nome TEXT NOT NULL,\n",
        "    email TEXT\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE Produtos (\n",
        "    id INTEGER PRIMARY KEY AUTOINCREMENT,\n",
        "    nome TEXT NOT NULL,\n",
        "    preco REAL NOT NULL\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "cursor.execute(\"\"\"\n",
        "CREATE TABLE Vendas (\n",
        "    id INTEGER PRIMARY KEY AUTOINCREMENT,\n",
        "    pessoa_id INTEGER,\n",
        "    produto_id INTEGER,\n",
        "    data_venda TEXT,\n",
        "    FOREIGN KEY (pessoa_id) REFERENCES Pessoas(id),\n",
        "    FOREIGN KEY (produto_id) REFERENCES Produtos(id)\n",
        ")\n",
        "\"\"\")\n",
        "\n",
        "# 3. Inserção de dados\n",
        "# Pessoas\n",
        "pessoas = [\n",
        "    (\"Joao\", \"joao@gmail.com\"),\n",
        "    (\"Beatriz\", \"beatriz@gmail.com\"),\n",
        "    (\"Matheus\", \"matheus@gmail.com\")\n",
        "]\n",
        "cursor.executemany(\"INSERT INTO Pessoas (nome, email) VALUES (?, ?)\", pessoas)\n",
        "\n",
        "# Produtos\n",
        "produtos = [\n",
        "    (\"Camiseta\", 49.90),\n",
        "    (\"Livro\", 29.90),\n",
        "    (\"Caneca\", 19.90)\n",
        "]\n",
        "cursor.executemany(\"INSERT INTO Produtos (nome, preco) VALUES (?, ?)\", produtos)\n",
        "\n",
        "# Vendas\n",
        "vendas = [\n",
        "    (1, 2, \"2024-05-01\"),\n",
        "    (2, 1, \"2024-05-02\"),\n",
        "    (3, 3, \"2024-05-03\"),\n",
        "    (1, 1, \"2024-05-04\")\n",
        "]\n",
        "cursor.executemany(\"INSERT INTO Vendas (pessoa_id, produto_id, data_venda) VALUES (?, ?, ?)\", vendas)\n",
        "\n",
        "conn.commit()\n",
        "\n",
        "# 4. Consultas\n",
        "\n",
        "print(\"\\nTodas as pessoas cadastradas:\")\n",
        "for row in cursor.execute(\"SELECT * FROM Pessoas\"):\n",
        "    print(row)\n",
        "\n",
        "print(\"\\nTodas as vendas (com JOIN entre tabelas):\")\n",
        "query = \"\"\"\n",
        "SELECT Vendas.id, Pessoas.nome, Produtos.nome, Produtos.preco, Vendas.data_venda\n",
        "FROM Vendas\n",
        "JOIN Pessoas ON Vendas.pessoa_id = Pessoas.id\n",
        "JOIN Produtos ON Vendas.produto_id = Produtos.id\n",
        "ORDER BY Vendas.data_venda ASC\n",
        "\"\"\"\n",
        "for row in cursor.execute(query):\n",
        "    print(row)\n",
        "\n",
        "print(\"\\nVendas feitas pela pessoa 'Joao':\")\n",
        "query = \"\"\"\n",
        "SELECT Produtos.nome, Produtos.preco, Vendas.data_venda\n",
        "FROM Vendas\n",
        "JOIN Pessoas ON Vendas.pessoa_id = Pessoas.id\n",
        "JOIN Produtos ON Vendas.produto_id = Produtos.id\n",
        "WHERE Pessoas.nome = 'Joao'\n",
        "\"\"\"\n",
        "for row in cursor.execute(query):\n",
        "    print(row)\n",
        "\n",
        "# Fechar a conexão ao final (opcional)\n",
        "conn.close()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U_KgaphVgH_5",
        "outputId": "d0594a47-2920-4c26-b2cc-5f9ec34b2af5"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Todas as pessoas cadastradas:\n",
            "(1, 'Joao', 'joao@gmail.com')\n",
            "(2, 'Beatriz', 'beatriz@gmail.com')\n",
            "(3, 'Matheus', 'matheus@gmail.com')\n",
            "\n",
            "Todas as vendas (com JOIN entre tabelas):\n",
            "(1, 'Joao', 'Livro', 29.9, '2024-05-01')\n",
            "(2, 'Beatriz', 'Camiseta', 49.9, '2024-05-02')\n",
            "(3, 'Matheus', 'Caneca', 19.9, '2024-05-03')\n",
            "(4, 'Joao', 'Camiseta', 49.9, '2024-05-04')\n",
            "\n",
            "Vendas feitas pela pessoa 'Joao':\n",
            "('Livro', 29.9, '2024-05-01')\n",
            "('Camiseta', 49.9, '2024-05-04')\n"
          ]
        }
      ]
    }
  ]
}